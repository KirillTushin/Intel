/*
 * assem.c
 * 
 * Tushin Kirill
 * 
 * 
 */
#include <stdio.h> 
#include <stdlib.h>

int PUSH(int *t,char arr[]);
int POP(int* t,char arr[]);
int ADD(int* t,char arr[]);
int SUB(int* t,char arr[]);
int MUL(int* t,char arr[]);
int DIV(int* t,char arr[]);

int main (void)
{  

	FILE *mf;

	char* sym;
	char c;
	int a = 0;
	int i = 0;

	mf = fopen ("test.txt","r");			//Считваем из файла команды
	
	while(1)
	{
		c = fgetc(mf);						//Подсчитываем их количество
		if(c == EOF)
			break;
		a++;
	}
	sym = malloc((a+1)*sizeof(char));		//создаем массив из символов	

	mf = fopen ("test.txt","r");
	
	while (1)
	{
		sym[i] = fgetc (mf);				//заносим в каждый элемент массива символ
		if (sym[i] == EOF)					
			break;
		i++;
	}
	i--;
		
	mf = fopen ("my.asem","w");			//будем записывать в файл my.asem
	
	int t = 0;
	
	while(t < i)
	{
		if(PUSH(&t, sym) == 1)
		{
			t++;
			fprintf(mf,"%c%d", 1, (sym[t]-'0'));			//Функции заносим в новый файл как char а число после PUSH как int
			t++;
		}
		if(sym[t] == '\n')
			t++;
		if(POP(&t, sym) == 2)
		{
			fprintf(mf,"%c", 2);	
			t++;
		}
		if(ADD(&t, sym) == 3)
		{
			fprintf(mf,"%c", 3);	
			t++;
		}
		if(SUB(&t, sym) == 4)
		{
			fprintf(mf,"%c", 4);	
			t++;
		}
		
		if(MUL(&t, sym) == 5)
		{
			fprintf(mf,"%c", 5);	
			t++;
		}
		if(DIV(&t, sym) == 6)
		{
			fprintf(mf,"%c", 6);	
			t++;
		}
	}
	free(sym);
	return 0;
} 




int PUSH(int* t,char arr[])					//сравниваем команды с введенными командами
{
	if (arr[*t] == 'P')
		if(arr[*t+1] == 'U')
			if(arr[*t+2] == 'S')
				if(arr[*t+3] == 'H')
				{
					*t+=4;
					return 1;
				}
	return 0;
}


int POP(int* t,char arr[])
{
	if (arr[*t] == 'P')
		if(arr[*t+1] == 'O')
			if(arr[*t+2] == 'P')
			{
				*t+=3;
				return 2;
			}
	return 0;
}

int ADD(int* t,char arr[])
{
	if (arr[*t] == 'A')
		if(arr[*t+1] == 'D')
			if(arr[*t+2] == 'D')
			{
				*t+=3;
				return 3;
			}
	return 0;
}

int SUB(int* t,char arr[])
{
	if (arr[*t] == 'S')
		if(arr[*t+1] == 'U')
			if(arr[*t+2] == 'B')
			{
				*t+=3;
				return 4;
			}
	return 0;
}

int MUL(int* t,char arr[])
{
	if (arr[*t] == 'M')
		if(arr[*t+1] == 'U')
			if(arr[*t+2] == 'L')
			{
				*t+=3;
				return 5;
			}
	return 0;
}


int DIV(int* t,char arr[])
{
	if (arr[*t] == 'D')
		if(arr[*t+1] == 'I')
			if(arr[*t+2] == 'V')
			{
				*t+=3;
				return 6;
			}
	return 0;
}
